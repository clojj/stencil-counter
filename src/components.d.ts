/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface MyCounter {
    'max': number;
    'min': number;
    'start': number;
    'step': number;
  }
  interface MyCounterAttributes extends StencilHTMLAttributes {
    'max'?: number;
    'min'?: number;
    'onMessage'?: (event: CustomEvent) => void;
    'start'?: number;
    'step'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MyCounter': Components.MyCounter;
  }

  interface StencilIntrinsicElements {
    'my-counter': Components.MyCounterAttributes;
  }


  interface HTMLMyCounterElement extends Components.MyCounter, HTMLStencilElement {}
  var HTMLMyCounterElement: {
    prototype: HTMLMyCounterElement;
    new (): HTMLMyCounterElement;
  };

  interface HTMLElementTagNameMap {
    'my-counter': HTMLMyCounterElement
  }

  interface ElementTagNameMap {
    'my-counter': HTMLMyCounterElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
